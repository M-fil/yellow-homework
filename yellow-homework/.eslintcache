[{"/Users/user/Desktop/yellow-homework/yellow-homework/src/pages/jogs/components/JogItem/index.tsx":"1","/Users/user/Desktop/yellow-homework/yellow-homework/src/core/utils/date.ts":"2","/Users/user/Desktop/yellow-homework/yellow-homework/src/core/utils/calculations.ts":"3","/Users/user/Desktop/yellow-homework/yellow-homework/src/core/components/Header/index.tsx":"4","/Users/user/Desktop/yellow-homework/yellow-homework/src/core/components/FilterBlock/index.tsx":"5","/Users/user/Desktop/yellow-homework/yellow-homework/src/core/components/Header/components/RoutesNavigation/index.tsx":"6","/Users/user/Desktop/yellow-homework/yellow-homework/src/core/context/global.ts":"7","/Users/user/Desktop/yellow-homework/yellow-homework/src/pages/jogs/index.tsx":"8","/Users/user/Desktop/yellow-homework/yellow-homework/src/pages/jogs/components/CreateJogModal/index.tsx":"9","/Users/user/Desktop/yellow-homework/yellow-homework/src/core/components/BurgerMenu/index.tsx":"10","/Users/user/Desktop/yellow-homework/yellow-homework/src/core/components/Button/close-button.tsx":"11"},{"size":1994,"mtime":1612103330452,"results":"12","hashOfConfig":"13"},{"size":444,"mtime":1612108593063,"results":"14","hashOfConfig":"13"},{"size":161,"mtime":1612103025107,"results":"15","hashOfConfig":"13"},{"size":1084,"mtime":1612104017438,"results":"16","hashOfConfig":"13"},{"size":894,"mtime":1612103285120,"results":"17","hashOfConfig":"13"},{"size":2509,"mtime":1612103503550,"results":"18","hashOfConfig":"13"},{"size":398,"mtime":1612103523888,"results":"19","hashOfConfig":"13"},{"size":1584,"mtime":1612104867943,"results":"20","hashOfConfig":"13"},{"size":3303,"mtime":1612108588775,"results":"21","hashOfConfig":"13"},{"size":2334,"mtime":1612107430080,"results":"22","hashOfConfig":"13"},{"size":590,"mtime":1612107403672,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":4,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1eswz85",{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":2,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":3,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","errorCount":2,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":3,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/user/Desktop/yellow-homework/yellow-homework/src/pages/jogs/components/JogItem/index.tsx",["47","48","49","50"],"/Users/user/Desktop/yellow-homework/yellow-homework/src/core/utils/date.ts",[],"/Users/user/Desktop/yellow-homework/yellow-homework/src/core/utils/calculations.ts",["51"],"/Users/user/Desktop/yellow-homework/yellow-homework/src/core/components/Header/index.tsx",["52"],"/Users/user/Desktop/yellow-homework/yellow-homework/src/core/components/FilterBlock/index.tsx",["53"],"/Users/user/Desktop/yellow-homework/yellow-homework/src/core/components/Header/components/RoutesNavigation/index.tsx",["54"],"/Users/user/Desktop/yellow-homework/yellow-homework/src/core/context/global.ts",["55","56"],"/Users/user/Desktop/yellow-homework/yellow-homework/src/pages/jogs/index.tsx",["57"],"/Users/user/Desktop/yellow-homework/yellow-homework/src/pages/jogs/components/CreateJogModal/index.tsx",["58","59","60","61"],"import './styles.scss';\nimport React, { ChangeEvent, FormEvent, useCallback, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport CreateIcon from '../../../../assets/images/main/create.svg';\nimport DefaultButton from '../../../../core/components/Button';\nimport DefaultInput from '../../../../core/components/DefaultInput';\nimport CloseButton from '../../../../core/components/Button/close-button';\nimport WhiteCloseIcon from '../../../../assets/images/main/white-close-icon.svg';\nimport { formatDate } from '../../../../core/utils/date';\n\ninterface FormValues {\n  distance: number,\n  time: number,\n  date: number,\n}\n\ninterface CreateJogModalProps {\n  isEditing?: boolean\n}\n\nconst mockFn = () => {};\n\nconst CreateJogModal: React.FC<CreateJogModalProps> = ({ isEditing }) => {\n  const [formValues, setFormValues] = useState<FormValues>({\n    distance: 0,\n    time: 0,\n    date: 0,\n  });\n  const [t] = useTranslation();\n  const minimumDateValue = formatDate(new Date(Date.now()), true, '-');\n\n  console.log(minimumDateValue);\n  const onFormValueChange = useCallback((name: keyof FormValues) => (event: ChangeEvent<HTMLInputElement>) => {\n    setFormValues((state) => {\n      const value = event.target.value;\n      let date = 0;\n      if (name === 'date') {\n        date = Date.parse(new Date(value).toString());\n      }\n\n      return {\n        ...state,\n        [name]: name === 'date' ? date : Number(value),\n      }\n    })\n  }, []);\n\n  const onFormSubmitHandler = useCallback((event: FormEvent) => {\n    event.preventDefault();\n  }, []);\n\n  const onCloseModal = useCallback(() => {}, []);\n\n  console.log('formValues', formValues);\n  return (\n    <>\n      <button\n        type=\"button\"\n        className=\"create-jog-btn\"\n      >\n        <img\n          src={CreateIcon}\n          alt=\"create-btn\"\n          className=\"create-jog-icon\"\n        />\n      </button>\n      <div className=\"jog-modal-overlay\">\n        <form\n          className=\"jog-modal\"\n          onSubmit={onFormSubmitHandler}\n        >\n          <div className=\"jog-modal__header\">\n            <CloseButton\n              closeFn={onCloseModal}\n              icon={WhiteCloseIcon}\n              extraClassName=\"jog-modal__close-button\"\n            />\n          </div>\n          <DefaultInput \n            type=\"number\"\n            extraClassName=\"jog-modal__label\"\n            onChange={onFormValueChange('distance')}\n            value={formValues.distance}\n            labelText={t('jogging.distance-text')}\n            min=\"1\"\n          />\n          <DefaultInput \n            type=\"number\"\n            extraClassName=\"jog-modal__label\"\n            onChange={onFormValueChange('time')}\n            value={formValues.time}\n            labelText={t('jogging.time-text')}\n            min=\"1\"\n          />\n          <DefaultInput \n            type=\"date\"\n            extraClassName=\"jog-modal__label\"\n            onChange={onFormValueChange('date')}\n            labelText={t('jogging.date-text')}\n            max={minimumDateValue}\n          />\n          <DefaultButton\n            text={t('jogging.save-jog-text')}\n            type=\"submit\"\n            onClick={mockFn}\n            extraClassName=\"jog-modal__submit-button\"\n          />\n        </form>\n      </div>\n    </>\n  );\n}\n\nexport default CreateJogModal;\n","/Users/user/Desktop/yellow-homework/yellow-homework/src/core/components/BurgerMenu/index.tsx",["62","63"],"/Users/user/Desktop/yellow-homework/yellow-homework/src/core/components/Button/close-button.tsx",["64","65","66"],{"ruleId":"67","severity":2,"message":"68","line":16,"column":44,"nodeType":"69","endLine":16,"endColumn":46},{"ruleId":"67","severity":2,"message":"70","line":16,"column":48,"nodeType":"69","endLine":16,"endColumn":52},{"ruleId":"67","severity":2,"message":"71","line":16,"column":54,"nodeType":"69","endLine":16,"endColumn":62},{"ruleId":"67","severity":2,"message":"72","line":16,"column":64,"nodeType":"69","endLine":16,"endColumn":68},{"ruleId":"73","severity":1,"message":"74","line":1,"column":7,"nodeType":"75","messageId":"76","endLine":1,"endColumn":22},{"ruleId":"67","severity":2,"message":"77","line":13,"column":42,"nodeType":"69","endLine":13,"endColumn":70},{"ruleId":"67","severity":2,"message":"78","line":11,"column":52,"nodeType":"69","endLine":11,"endColumn":61},{"ruleId":"67","severity":2,"message":"79","line":18,"column":3,"nodeType":"69","endLine":18,"endColumn":26},{"ruleId":"80","severity":2,"message":"81","line":11,"column":29,"nodeType":"82","messageId":"83","endLine":11,"endColumn":31},{"ruleId":"80","severity":2,"message":"84","line":12,"column":23,"nodeType":"82","messageId":"83","endLine":12,"endColumn":25},{"ruleId":"73","severity":1,"message":"85","line":14,"column":10,"nodeType":"75","messageId":"76","endLine":14,"endColumn":22},{"ruleId":"80","severity":2,"message":"86","line":22,"column":22,"nodeType":"82","messageId":"83","endLine":22,"endColumn":24},{"ruleId":"73","severity":1,"message":"87","line":24,"column":58,"nodeType":"75","messageId":"76","endLine":24,"endColumn":67},{"ruleId":"67","severity":2,"message":"88","line":24,"column":58,"nodeType":"69","endLine":24,"endColumn":67},{"ruleId":"80","severity":2,"message":"86","line":53,"column":42,"nodeType":"82","messageId":"83","endLine":53,"endColumn":44},{"ruleId":"67","severity":2,"message":"89","line":17,"column":50,"nodeType":"69","endLine":17,"endColumn":59},{"ruleId":"67","severity":2,"message":"90","line":17,"column":61,"nodeType":"69","endLine":17,"endColumn":69},{"ruleId":"67","severity":2,"message":"91","line":11,"column":3,"nodeType":"69","endLine":11,"endColumn":10},{"ruleId":"67","severity":2,"message":"92","line":11,"column":12,"nodeType":"69","endLine":11,"endColumn":28},{"ruleId":"67","severity":2,"message":"93","line":11,"column":30,"nodeType":"69","endLine":11,"endColumn":49},"react/prop-types","'id' is missing in props validation","Property","'date' is missing in props validation","'distance' is missing in props validation","'time' is missing in props validation","@typescript-eslint/no-unused-vars","'MINUTES_IN_HOUR' is assigned a value but never used.","Identifier","unusedVar","'showRoutesNavigation' is missing in props validation","'isVisible' is missing in props validation","'setIsFilterBlockVisible' is missing in props validation","@typescript-eslint/no-empty-function","Unexpected empty arrow function 'setIsAuthenticated'.","ArrowFunctionExpression","unexpected","Unexpected empty arrow function 'setIsLoading'.","'errorMessage' is assigned a value but never used.","Unexpected empty arrow function.","'isEditing' is defined but never used.","'isEditing' is missing in props validation","'closeMenu' is missing in props validation","'isOpened' is missing in props validation","'closeFn' is missing in props validation","'icon' is missing in props validation","'extraClassName' is missing in props validation"]